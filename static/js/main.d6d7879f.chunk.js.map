{"version":3,"sources":["components/Link.js","components/Resume.js","components/SideBar.js","components/Content.js","components/ContentArea.js","App.js","serviceWorker.js","index.js","img/Headshot.png"],"names":["Link","className","this","props","pageNumber","currentPage","onClick","navigation","text","React","Component","Resume","href","target","SideBar","src","Headshot","alt","Content","ContentArea","App","useState","setCurrentPage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"+PAEqBA,E,uKAER,IAAD,OACJ,OACI,yBAAKC,UAAU,0BACX,0BAAMA,UAAWC,KAAKC,MAAMC,aAAeF,KAAKC,MAAME,YAAc,aAAa,OAAQC,QAAS,kBAAM,EAAKH,MAAMI,WAAW,EAAKJ,MAAMC,cACpIF,KAAKC,MAAMK,W,GANEC,IAAMC,WCAnBC,E,uKAGb,OACI,yBAAKV,UAAU,0BACX,uBAAGA,UAAW,OAAQW,KAAK,qFAAqFC,OAAO,UAAvH,e,GALoBJ,IAAMC,WCGrBI,E,uKAGb,OACI,yBAAKb,UAAU,YACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,WAAWc,IAAKC,IAAUC,IAAI,cAEjD,6BACI,wBAAIhB,UAAU,eAAd,iBACA,yBAAKA,UAAU,eACX,uBAAGA,UAAU,OAAOW,KAAK,mCACzB,uBAAGX,UAAU,0BADb,4BAEA,2BAAG,uBAAGA,UAAU,uBAAhB,mBAGR,yBAAKA,UAAU,YACX,kBAAC,EAAD,CACIM,WAAYL,KAAKC,MAAMI,WACvBC,KAAM,eACNJ,WAAY,EACZC,YAAaH,KAAKC,MAAME,cAE5B,kBAAC,EAAD,CACIE,WAAYL,KAAKC,MAAMI,WACvBC,KAAM,WACNJ,WAAY,EACZC,YAAaH,KAAKC,MAAME,cAE5B,kBAAC,EAAD,CACIE,WAAYL,KAAKC,MAAMI,WACvBC,KAAM,WACNJ,WAAY,EACZC,YAAaH,KAAKC,MAAME,cAE5B,kBAAC,EAAD,OAGJ,yBAAKJ,UAAU,SACX,yBAAKA,UAAU,0BACX,uBAAGA,UAAU,OAAOW,KAAK,qCACrB,uBAAGX,UAAU,gCAGrB,yBAAKA,UAAU,0BACX,uBAAGA,UAAU,OAAOW,KAAK,wDACrB,uBAAGX,UAAU,4BAIzB,yBAAKA,UAAU,UACX,iH,GAnDiBQ,IAAMC,WCFtBQ,E,uKAEP,IAAD,OACL,OAAQhB,KAAKC,MAAME,aACf,KAAK,EACD,OACI,yBAAKJ,UAAU,gBACX,kCAAO,6BAAP,aACc,6BACd,4BAAQA,UAAU,YAAYK,QAAS,kBAAM,EAAKH,MAAMI,WAAW,KAAnE,cAAkF,uBAAGN,UAAU,yBAG3G,KAAK,EACD,OACI,yBAAKA,UAAU,WACX,yCAGZ,KAAK,EACD,OACI,yBAAKA,UAAU,WACX,yCAGZ,KAAK,EACD,OACI,kBAAC,EAAD,MAGR,QACI,OAAQ,mC,GA9BaQ,IAAMC,WCAtBS,E,uKAER,IAAD,OACJ,OACI,yBAAKlB,UAAU,qBACX,kBAAC,EAAD,CACII,YAAeH,KAAKC,MAAME,YAC1BE,WAAc,kBAAM,EAAKJ,MAAMI,mB,GAPVE,IAAMC,WCyBhCU,MAvBf,WAAgB,IAAD,EAE6BC,qBAF7B,0BAENhB,OAFM,MAEQ,EAFR,EAEWiB,EAFX,KAIb,SAASf,EAAWH,GAClBkB,EAAelB,GAGjB,OACE,yBAAKH,UAAU,kBACb,kBAAC,EAAD,CACEI,YAAaA,EACbE,WAAYA,IAEd,kBAAC,EAAD,CACAF,YAAaA,EACbE,WAAYA,MCTEgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,kBEzI5BC,EAAOC,QAAU,IAA0B,sC","file":"static/js/main.d6d7879f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class Link extends React.Component\r\n{\r\n    render(){\r\n        return(\r\n            <div className=\"text-center navigation\">\r\n                <span className={this.props.pageNumber === this.props.currentPage ? \"activeLink\":\"link\"} onClick={() => this.props.navigation(this.props.pageNumber)}>\r\n                    {this.props.text}\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class Resume extends React.Component\r\n{\r\n    render(){\r\n        return(\r\n            <div className=\"text-center navigation\">\r\n                <a className={\"link\"} href=\"https://drive.google.com/file/d/1gaYZ94oHrvS-CpRgLniUo4C7ubzEWbtE/view?usp=sharing\" target=\"_blank\">\r\n                    Resume\r\n                </a>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Headshot from '../img/Headshot.png';\r\nimport Link from './Link'\r\nimport Resume from './Resume';\r\n\r\nexport default class SideBar extends React.Component\r\n{\r\n    render(){\r\n        return(\r\n            <div className=\"side-bar\">\r\n                <div className=\"image-container\">\r\n                    <img className=\"headshot\" src={Headshot} alt=\"Headshot\"/>\r\n                </div>\r\n                <div>\r\n                    <h1 className=\"center name\">Aaron Madison</h1>\r\n                    <div className=\"center info\">\r\n                        <a className=\"link\" href=\"mailto:aaronmadison29@gmail.com\" >\r\n                        <i className=\"fa fa-envelope-square\"></i>aaronmadison29@gmail.com</a>\r\n                        <p><i className=\"fa fa-phone-square\"></i>(414)429-6858</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"navlinks\">\r\n                    <Link\r\n                        navigation={this.props.navigation}\r\n                        text={\"Introduction\"}\r\n                        pageNumber={0}\r\n                        currentPage={this.props.currentPage}\r\n                    />\r\n                    <Link\r\n                        navigation={this.props.navigation}\r\n                        text={\"About Me\"}\r\n                        pageNumber={1}\r\n                        currentPage={this.props.currentPage}\r\n                    />\r\n                    <Link\r\n                        navigation={this.props.navigation}\r\n                        text={\"Projects\"}\r\n                        pageNumber={2}\r\n                        currentPage={this.props.currentPage}\r\n                    />\r\n                    <Resume\r\n                    />\r\n                </div>\r\n                <div className=\"icons\">\r\n                    <div className=\"text-center navigation\">\r\n                        <a className=\"link\" href=\"https://github.com/AaronMadison29\">\r\n                            <i className=\"fa fa-github-square fa-2x\"></i>\r\n                        </a>\r\n                    </div>\r\n                    <div className=\"text-center navigation\">\r\n                        <a className=\"link\" href=\"https://www.linkedin.com/in/aaron-madison-229bb8196/\">\r\n                            <i className=\"fa fa-linkedin fa-2x\"></i>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n                <div className=\"thanks\">\r\n                    <p>\r\n                        Thank you for visiting my portfolio. Please feel free to contact me anytime.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Resume from './Resume';\r\n\r\nexport default class Content extends React.Component\r\n{\r\n    render() {\r\n        switch (this.props.currentPage) {\r\n            case 0:\r\n                return (\r\n                    <div className=\"introduction\">\r\n                        <h1>Hi!<br></br>\r\n                        I'm Aaron</h1><br></br>\r\n                        <button className=\"know-more\" onClick={() => this.props.navigation(1)}>Learn More <i className=\"fa fa-check-square\"></i></button>\r\n                    </div>\r\n                );\r\n            case 1:\r\n                return (\r\n                    <div className=\"content\">\r\n                        <h1>About Me</h1>\r\n                    </div>\r\n                );\r\n            case 2:\r\n                return (\r\n                    <div className=\"content\">\r\n                        <h1>Projects</h1>\r\n                    </div>\r\n                );\r\n            case 3:\r\n                return(\r\n                    <Resume\r\n                    />\r\n                )\r\n            default:\r\n                return (<div></div>);\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport Content from './Content';\r\n\r\nexport default class ContentArea extends React.Component\r\n{\r\n    render(){\r\n        return(\r\n            <div className=\"content-container\">\r\n                <Content\r\n                    currentPage = {this.props.currentPage}\r\n                    navigation = {() => this.props.navigation}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {useState} from 'react';\r\nimport './App.css';\r\nimport SideBar from './components/SideBar.js';\r\nimport ContentArea from './components/ContentArea.js';\r\n\r\nfunction App() {\r\n  \r\n  const [currentPage = 0, setCurrentPage] = useState();\r\n\r\n  function navigation(pageNumber) {\r\n    setCurrentPage(pageNumber);\r\n  }\r\n\r\n  return (\r\n    <div className=\"row background\">\r\n      <SideBar\r\n        currentPage={currentPage}\r\n        navigation={navigation}\r\n      />\r\n      <ContentArea\r\n      currentPage={currentPage}\r\n      navigation={navigation}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/Headshot.26116993.png\";"],"sourceRoot":""}